##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.4.0-B60] date: [Mon Jan 13 14:34:21 CST 2025] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = Blink


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################



# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/usb_descriptors.c \
Core/Src/motor.c \
Core/Src/filter.c \
Core/Src/pid.c \
Core/Src/controller.c \
Core/Src/stm32f7xx_it.c \
Core/Src/stm32f7xx_hal_msp.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_tim_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_rcc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_gpio.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_i2c_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_exti.c \
Core/Src/system_stm32f7xx.c \
Core/Src/sysmem.c \
Core/Src/syscalls.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_adc_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pcd_ex.c \
Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_usb.c \
Drivers/tinyusb/src/tusb.c \
Drivers/tinyusb/src/common/tusb_fifo.c \
Drivers/tinyusb/src/device/usbd.c \
Drivers/tinyusb/src/device/usbd_control.c \
Drivers/tinyusb/src/typec/usbc.c \
Drivers/tinyusb/src/class/audio/audio_device.c \
Drivers/tinyusb/src/class/cdc/cdc_device.c \
Drivers/tinyusb/src/class/dfu/dfu_device.c \
Drivers/tinyusb/src/class/dfu/dfu_rt_device.c \
Drivers/tinyusb/src/class/hid/hid_device.c \
Drivers/tinyusb/src/class/midi/midi_device.c \
Drivers/tinyusb/src/class/msc/msc_device.c \
Drivers/tinyusb/src/class/net/ecm_rndis_device.c \
Drivers/tinyusb/src/class/net/ncm_device.c \
Drivers/tinyusb/src/class/usbtmc/usbtmc_device.c \
Drivers/tinyusb/src/class/video/video_device.c \
Drivers/tinyusb/src/class/vendor/vendor_device.c \
Drivers/tinyusb/src/host/usbh.c \
Drivers/tinyusb/src/host/hub.c \
Drivers/tinyusb/src/class/cdc/cdc_host.c \
Drivers/tinyusb/src/class/hid/hid_host.c \
Drivers/tinyusb/src/class/msc/msc_host.c \
Drivers/tinyusb/src/class/vendor/vendor_host.c \
Drivers/tinyusb/src/typec/usbc.c \
Drivers/tinyusb/src/portable/synopsys/dwc2/dcd_dwc2.c \
Core/Src/SEGGER_RTT.c \
Core/Src/SEGGER_RTT_printf.c \
Core/Src/SEGGER_RTT_Syscalls_GCC.c


CMSIS_DSP = CMSIS_DSP
C_SOURCES += $(CMSIS_DSP)/Source/BasicMathFunctions/BasicMathFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/CommonTables/CommonTables.c
C_SOURCES += $(CMSIS_DSP)/Source/InterpolationFunctions/InterpolationFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/BayesFunctions/BayesFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/MatrixFunctions/MatrixFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/ComplexMathFunctions/ComplexMathFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/QuaternionMathFunctions/QuaternionMathFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/ControllerFunctions/ControllerFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/SVMFunctions/SVMFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/DistanceFunctions/DistanceFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/StatisticsFunctions/StatisticsFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/FastMathFunctions/FastMathFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/SupportFunctions/SupportFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/FilteringFunctions/FilteringFunctions.c
C_SOURCES += $(CMSIS_DSP)/Source/TransformFunctions/TransformFunctions.c

# ASM sources
ASM_SOURCES =  \
startup_stm32f723xx.s \
Core/Src/SEGGER_RTT_ASM_ARMv7M.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F723xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32F7xx_HAL_Driver/Inc \
-IDrivers/STM32F7xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32F7xx/Include \
-IDrivers/CMSIS/Include \
-I${CMSIS_DSP}/Include \
-I${CMSIS_DSP}/Include/dsp \
-I$(CMSIS_DSP)/PrivateInclude \
-IDrivers/tinyusb/src





# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F723ZETx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	del /s /q $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
